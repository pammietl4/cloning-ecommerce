name: Build and Push Microservices

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Detect changed microservices and build/push only if changed
      run: |
        # List of microservices
        services=("user-service" "product-service" "cart-service" "order-service" "payment-service")

        # Get list of changed files (compare to previous commit or PR base)
        if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
          # For PR, compare against base commit
          git fetch origin ${{ github.base_ref }}
          CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...${{ github.sha }})
        else
          # For push/workflow_dispatch, compare to previous commit
          git fetch --prune --unshallow || true  # Ensure full history
          CHANGED=$(git diff --name-only ${{ github.sha }}^ ${{ github.sha }})
        fi

        VERSION="v1.${{ github.run_number }}"
        echo "🔄 Build process... Version: $VERSION"

        for service in "${services[@]}"; do
          # Check if any files in the service folder were changed
          if echo "$CHANGED" | grep "^$service/" > /dev/null; then
            if [ -d "$service" ]; then
              echo "🚀 Building $service ..."
              docker build -t ${{ secrets.DOCKER_USERNAME }}/$service:latest -t ${{ secrets.DOCKER_USERNAME }}/$service:$VERSION ./$service

              echo "📤 Pushing $service ..."
              docker push ${{ secrets.DOCKER_USERNAME }}/$service:latest
              docker push ${{ secrets.DOCKER_USERNAME }}/$service:$VERSION

              echo "✅ $service build & push completed successfully"
            else
              echo "⚠️ Skipping $service — folder not found"
            fi
          else
            echo "⏭️ Skipping $service — no changes detected"
          fi
        done

        echo "🎉 All changed services have been processed."